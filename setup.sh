#!/usr/bin/env bash

pos_args=()
QUIET=false

NIXINIT_MARKER="Auto-generated by nixinit"
CONFIG_ROOT="./configs"


function confirm() {
    NL="
"
    read -n 1 -p "$1 [y/N] " response
    if [[ "$response" == $NL ]]; then
        echo
    fi

    if [[ "$response" =~ ^[yY]$ ]]
    then
        return 0
    else
        return 1
    fi
}


function try_install() {
    { command -v "$1" >/dev/null 2>&1 && cecho "$1 already installed"; } || { cecho "Installing $1..." && apt install "$1"; }
}

function try_update_config() {
    name="$1" && shift
    mark="$1" && shift

    src="$CONFIG_ROOT/$name"
    dst=~/".$name"

    if [[ ! -e $dst ]]
    then
        cecho -n "Creating $dst..."
        touch $dst
        cecho "done"
    fi


    if grep -qF "$mark" "$dst"; then
        cecho "$dst already up to date"
        return 0
    fi

    cecho -n "Updating $dst..."

    cecho "" >> $dst
    cecho "$mark" >> $dst
    cat $src >> $dst

    cecho "done"
}

function cecho() {
    if ! $QUIET; then
        echo $@
    fi
}


# Parse args

while [[ $# -gt 0 ]]; do
    if [[ "${1,,}" == "-q" ]]; then
        QUIET=true
    else
        pos_args+=("$1")
    fi

    shift
done


# Configs
try_update_config "bashrc" "# $NIXINIT_MARKER"
source ~/.bashrc
try_update_config "vimrc" "\" $NIXINIT_MARKER"

# Git
try_install git

if ! grep -qF "name =" ~/.gitconfig; then
    read -p "Git username: " git_uname
    git config --global user.name "$git_uname"
fi

if ! grep -qF "email =" ~/.gitconfig; then
    read -p "Git email: " git_email
    git config --global user.email "$git_email"
fi

# GitHub
RSA_PATH=~/.ssh/rsa_id
RSA_PUB="$RSA_PATH.pub"
if [[ ! -e "$RSA_PUB" ]]; then
    cecho -n "Generating RSA public/private key pairs..."
    ssh-keygen -q -f "$RSA_PATH" -N ""
    cecho "done"
fi

confirm "Show public key?" && vim "$RSA_PUB"

# Programs
try_install sl


# Closing
cecho
cecho "Setup complete!"
